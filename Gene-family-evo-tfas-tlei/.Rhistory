library(ggplot2)
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/Gene-family-evo-tfas-tlei/")
counts <- read.table("orthogroups_Tfas_Tlei_Acom.counts.no_TEs.size_corrections.txt", sep = '\t')
colnames(counts) <- c("og_id", "Acom", "Tfas", "Tlei")
# Same without plastid annotations
counts_noplastid <- read.table("orthogroups_Tfas_Tlei_Acom.counts.no_TEs.size_corrections.no_plastid-mito-ribo.txt",
sep = "\t")
colnames(counts_noplastid) <- c("og_id", "Acom", "Tfas", "Tlei")
counts_Tfas_Tlei_npl <- counts_noplastid[counts_noplastid$Tfas != 0 & counts_noplastid$Tlei != 0,]
ggplot(counts_Tfas_Tlei_npl, aes(x=Tfas, y=Tlei)) + geom_point(size = .5) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Per-species gene counts in multi-copy orthogroups") +
ylab(label = "T. leiboldiana") +
xlab(label = "T. fasciculata") +
theme_bw()
counts_Tfas_Tlei_npl <- counts_Tfas_Tlei_npl[counts_Tfas_Tlei_npl$og_id != "OG0000015",]
ggplot(counts_Tfas_Tlei_npl, aes(x=Tfas, y=Tlei)) + geom_point(size = .5) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Per-species gene counts in multi-copy orthogroups") +
ylab(label = "T. leiboldiana") +
xlab(label = "T. fasciculata") +
theme_bw()
View(counts_Tfas_Tlei_npl)
counts_Tfas_Tlei_npl_multi <- counts_Tfas_Tlei_npl[!(counts_Tfas_Tlei_npl$Tfas == 1 & counts_Tfas_Tlei_npl$Tlei == 1),]
View(counts_Tfas_Tlei_npl_multi)
write.table(counts_Tfas_Tlei_npl_multi, file = "orthogroup_selection_for_GO_term_all.txt", sep = "\t")
tlei_genes <- read.table("Tlei_pergene_mediancov_and_orthoinfo.txt", header = T)
###########################################################################################
### Same for Tleiboldiana
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/Gene-family-evo-tfas-tlei/")
tlei_genes <- read.table("Tlei_pergene_mediancov_and_orthoinfo.txt", header = T)
mean(tlei_genes$median_cov) # 66.9
mean(tlei_genes$mean_cov) # 66.6
# simplified
dup <- c()
for (i in 1:nrow(tlei_genes)){
if (tlei_genes[i,7] == 1 && tlei_genes[i,5] == 1 && tlei_genes[i,6] ==1){
dup <- c(dup, "ancestral-single-copy")
} else if (tlei_genes[i,7] == 1){
dup <- c(dup, "single-copy")
} else if (tlei_genes[i,7] > 1 && tlei_genes[i,5] == 0 && tlei_genes[i,6] == 0){
dup <- c(dup, "unique-multi-copy")
} else if (tlei_genes[i,7] > 1 && tlei_genes[i,7] == tlei_genes[i,5] && tlei_genes[i,7] == tlei_genes[i,6]){
dup <- c(dup, "ancestral-multi-copy")
} else {
dup <- c(dup, "multi-copy")
}
}
tlei_genes$duplicated <- dup
mu <- ddply(tlei_genes, "dup", summarise, grp.mean=mean(mean_cov))
library(ggplot2)
library(plyr)
library(wesanderson)
mu <- ddply(tlei_genes, "dup", summarise, grp.mean=mean(mean_cov))
head(mu)
# Set colors for simple categories
mycolors <- c(wes_palette("Darjeeling1")[1], wes_palette("Darjeeling1")[2], wes_palette("FantasticFox1")[3],
wes_palette("Darjeeling1")[3], wes_palette("GrandBudapest1")[3])
library(wesanderson)
install.packages("wesanderson")
library(wesanderson)
# Set colors for simple categories
mycolors <- c(wes_palette("Darjeeling1")[1], wes_palette("Darjeeling1")[2], wes_palette("FantasticFox1")[3],
wes_palette("Darjeeling1")[3], wes_palette("GrandBudapest1")[3])
ggplot(tlei_genes, aes(x=mean_cov, colour=duplicated)) +
geom_density() +
xlim(0,150) +
geom_vline(xintercept = 53.34, linetype = "longdash", color = "gray28") +
scale_color_manual(values = mycolors) +
scale_fill_manual(values = mycolors)
###########################################################################################
### Same for Tleiboldiana
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/Gene-family-evo-tfas-tlei/")
tlei_genes <- read.table("Tlei_pergene_mediancov_and_orthoinfo.txt", header = T)
mean(tlei_genes$median_cov) # 66.9
mean(tlei_genes$mean_cov) # 66.6
# simplified
dup <- c()
for (i in 1:nrow(tlei_genes)){
if (tlei_genes[i,7] == 1 && tlei_genes[i,5] == 1 && tlei_genes[i,6] ==1){
dup <- c(dup, "ancestral-single-copy")
} else if (tlei_genes[i,7] == 1){
dup <- c(dup, "single-copy")
} else if (tlei_genes[i,7] > 1 && tlei_genes[i,5] == 0 && tlei_genes[i,6] == 0){
dup <- c(dup, "unique-multi-copy")
} else if (tlei_genes[i,7] > 1 && tlei_genes[i,7] == tlei_genes[i,5] && tlei_genes[i,7] == tlei_genes[i,6]){
dup <- c(dup, "ancestral-multi-copy")
} else {
dup <- c(dup, "multi-copy")
}
}
tlei_genes$duplicated <- dup
# Because the distribution here is unimodal, with just a small shoulder of faulty genes at low coverage,
# we can't separate the shoulder in the same way as we did for Tfas. So, I decided to run corrections
# on all multicopy genes.
# Correcting the gene family sizes based on coverage differences for all multicopy genes
Tlei_multicopy <- tlei_genes[tlei_genes$duplicated == "multi-copy",]
View(Tlei_multicopy)
corr_Tlei <- data.frame()
for (i in unique(Tlei_multicopy$og_id)){
orthogroup <- Tlei_multicopy[Tlei_multicopy$og_id == i,]
nr_genes <- as.integer(orthogroup[1,7])
total_mean_cov <- sum(orthogroup$mean_cov)
expected_mean_cov <- nr_genes * 53.34
correction_factor <- total_mean_cov/expected_mean_cov
new_size = round((nr_genes * correction_factor), digits = 0)
if (correction_factor > 1){
new_size = nr_genes
}
if (total_mean_cov < 53.34){
new_size = 1
}
corr_family_size <- cbind(i, as.numeric(correction_factor), as.integer(new_size),
as.integer(nr_genes), as.numeric(total_mean_cov), expected_mean_cov)
corr_Tlei <- rbind(corr_Tlei, corr_family_size)
}
rownames(corr_Tlei) <- c(1:1450)
colnames(corr_Tlei) <- c("og_id", "correction_factor", "corr_Tlei_count","old_Tlei_count", "total_mean_cov", "expected_mean_cov")
View(corr_Tlei)
write.table(corr_Tfas, file = "corrected_family_sizes_Tlei.txt")
write.table(corr_Tlei, file = "corrected_family_sizes_Tlei.txt")
View(orthogroup)
length(corr_Tlei[corr_Tlei$corr_Tlei_count == corr_Tlei$old_Tlei_count,])
corr_Tlei$corr_Tlei_count == corr_Tlei$old_Tlei_count
corr_Tlei[corr_Tlei$corr_Tlei_count == corr_Tlei$old_Tlei_count,]
length(corr_Tlei[corr_Tlei$corr_Tlei_count == corr_Tlei$old_Tlei_count,])
nrow(corr_Tlei[corr_Tlei$corr_Tlei_count == corr_Tlei$old_Tlei_count,])
nrow(corr_Tlei[corr_Tlei$corr_Tlei_count != corr_Tlei$old_Tlei_count,])
changed <- corr_Tlei[corr_Tlei$corr_Tlei_count != corr_Tlei$old_Tlei_count,])
changed <- corr_Tlei[corr_Tlei$corr_Tlei_count != corr_Tlei$old_Tlei_count,]
View(changed)
sum(changed$old_Tlei_count)
changed$corr_Tlei_count <- as.character(changed$corr_Tlei_count)
changed$corr_Tlei_count <- as.integer(changed$corr_Tlei_count)
changed$old_Tlei_count <- as.integer(changed$old_Tlei_count)
tfas_genes <- read.table("Tfas_pergene_mediancov_and_orthoinfo.txt", header = T)
mean(tfas_genes$median_cov) # 47.3
mean(tfas_genes$mean_cov) # 47.9
# simplified categories
dup <- c()
for (i in 1:nrow(tfas_genes)){
if (tfas_genes[i,6] == 1 && tfas_genes[i,5] == 1 && tfas_genes[i,7] ==1){
dup <- c(dup, "ancestral-single-copy")
} else if (tfas_genes[i,6] == 1){
dup <- c(dup, "single-copy")
} else if (tfas_genes[i,6] > 1 && tfas_genes[i,5] == 0 && tfas_genes[i,7] == 0){
dup <- c(dup, "unique-multi-copy")
} else if (tfas_genes[i,6] > 1 && tfas_genes[i,6] == tfas_genes[i,5] && tfas_genes[i,6] == tfas_genes[i,7]){
dup <- c(dup, "ancestral-multi-copy")
} else {
dup <- c(dup, "multi-copy")
}
}
tfas_genes$duplicated <- dup
# Obtain average coverage for each category
mu <- ddply(tfas_genes, "dup", summarise, grp.mean=mean(median_cov))
head(mu)
# Density plot of mean coverage per gene per category
ggplot(tfas_genes, aes(x=mean_cov, color=dup)) +
geom_density() +
xlim(0,150) +
geom_vline(xintercept = 46.1712, linetype = "longdash", colour = "gray28") +
scale_color_manual(values = mycolors) +
scale_fill_manual(values = mycolors)
tfas_multicopy_median_cov_df <- tfas_genes[tfas_genes$duplicated == 'multi-copy',]
faulty_genes <- tfas_multicopy_median_cov_df[tfas_multicopy_median_cov_df$median_cov < 35,] # 4881 genes
View(faulty_genes)
View(tlei_genes)
View(tfas_genes)
# Correcting the gene family sizes based on coverage differences
# Select all orthogroups containing faulty genes
library(dplyr)
tfas_genes %>%
filter(og_id %in% faulty_genes$og_id)
tfas_genes %>%
filter(og_id %in% faulty_genes$og_id) -> orthogroups_w_faulty_genes
faulty_genes <- tfas_multicopy_median_cov_df[tfas_multicopy_median_cov_df$median_cov < 35,] # 4881 genes
length(unique(faulty_genes$og_id))
faulty_genes <- tfas_multicopy_median_cov_df[tfas_multicopy_median_cov_df$mean_cov < 35,] # 4881 genes
length(unique(faulty_genes$og_id))
changed <- corr_Tlei[corr_Tlei$corr_Tlei_count != corr_Tlei$old_Tlei_count,]
write.table(corr_Tlei, file = "corrected_family_sizes_Tlei.txt")
View(corr_Tlei)
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/Gene-family-evo-tfas-tlei/")
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/Gene-family-evo-tfas-tlei/")
setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/Gene-family-evo-tfas-tlei/")
counts_noplastid <- read.table("orthogroups_Tfas_Tlei_Acom.counts.no_TEs.size_corrections-bothspecies.no_plastid-mito-ribo.txt",
sep = "\t")
colnames(counts) <- c("og_id", "Acom", "Tfas", "Tlei")
# Filter out unique orthogroups
counts_Tfas_Tlei <- counts[counts$Tfas != 0 & counts$Tlei != 0,]
counts_Tfas_Tlei_npl <- counts_noplastid[counts_noplastid$Tfas != 0 & counts_noplastid$Tlei != 0,]
counts_Tfas_Tlei_npl <- counts_Tfas_Tlei_npl[counts_Tfas_Tlei_npl$og_id != "OG0000015",]
ggplot(counts_Tfas_Tlei_npl, aes(x=Tfas, y=Tlei)) + geom_point(size = .5) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Per-species gene counts in multi-copy orthogroups") +
ylab(label = "T. leiboldiana") +
xlab(label = "T. fasciculata") +
theme_bw()
colnames(counts_noplastid) <- c("og_id", "Acom", "Tfas", "Tlei")
ggplot(counts_Tfas_Tlei_npl, aes(x=Tfas, y=Tlei)) + geom_point(size = .5) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Per-species gene counts in multi-copy orthogroups") +
ylab(label = "T. leiboldiana") +
xlab(label = "T. fasciculata") +
theme_bw()
# Same without plastid annotations
counts_noplastid <- read.table("orthogroups_Tfas_Tlei_Acom.counts.no_TEs.size_corrections-bothspecies.no_plastid-mito-ribo.txt",
sep = "\t")
colnames(counts_noplastid) <- c("og_id", "Acom", "Tfas", "Tlei")
counts_Tfas_Tlei_npl <- counts_noplastid[counts_noplastid$Tfas != 0 & counts_noplastid$Tlei != 0,]
ggplot(counts_Tfas_Tlei_npl, aes(x=Tfas, y=Tlei)) + geom_point(size = .5) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Per-species gene counts in multi-copy orthogroups") +
ylab(label = "T. leiboldiana") +
xlab(label = "T. fasciculata") +
theme_bw()
View(counts_Tfas_Tlei_npl_multi)
counts_Tfas_Tlei_npl_multi <- counts_Tfas_Tlei_npl[!(counts_Tfas_Tlei_npl$Tfas == 1 & counts_Tfas_Tlei_npl$Tlei == 1),]
View(counts_Tfas_Tlei_npl_multi)
# Same without plastid annotations
counts_noplastid <- read.table("orthogroups_Tfas_Tlei_Acom.counts.no_TEs.size_corrections-bothspecies.no_plastid-mito-ribo.txt",
sep = "\t")
colnames(counts_noplastid) <- c("og_id", "Acom", "Tfas", "Tlei")
counts_Tfas_Tlei_npl <- counts_noplastid[counts_noplastid$Tfas != 0 & counts_noplastid$Tlei != 0,]
ggplot(counts_Tfas_Tlei_npl, aes(x=Tfas, y=Tlei)) + geom_point(size = .5) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Per-species gene counts in multi-copy orthogroups") +
ylab(label = "T. leiboldiana") +
xlab(label = "T. fasciculata") +
theme_bw()
counts_Tfas_Tlei_npl_multi <- counts_Tfas_Tlei_npl[!(counts_Tfas_Tlei_npl$Tfas == 1 & counts_Tfas_Tlei_npl$Tlei == 1),]
View(counts_Tfas_Tlei_npl_multi)
View(counts_Tfas_Tlei_npl_multi)
