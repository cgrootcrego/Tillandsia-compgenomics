mean(t$multimapping_reads)
mean(r$multimapping_reads)
View(r)
mean(t$multimapping_p)
mean(r$multimapping_p)
mean(t$unmapped_p)
mean(r$unmapped_p)
View(t)
# Comparison between mapping against full assembly and 26 scaffolds
map_rates2 <- cbind(t[,c(1,12)], r[,c(12)])
View(map_rates2)
colnames(map_rates2) <- c("species", "map_rates_all", "map_rates_26")
library(reshape2)
colnames(map_rates2) <- c("sample", "map_rates_all", "map_rates_26")
library(reshape2)
map_rates2_m <-melt(map_rates2, id.vars = c("sample"))
View(map_rates2)
View(map_rates2_m)
library(ggplot2)
ggplot(map_rates2_m, aes(x = variable, y = value, color = variable, fill =variable)) +
geom_violin(trim = FALSE) +
scale_fill_brewer(palette="Dark2") +
scale_color_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(map_rates2_m, aes(x = variable, y = value, color = variable, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
scale_color_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(map_rates2_m, aes(x = variable, y = value, color = variable, fill =variable)) +
geom_boxplot() +
scale_color_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(map_rates2_m, aes(x = variable, y = value, color = variable, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
scale_color_brewer(colour = "Black") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(map_rates2_m, aes(x = variable, y = value, color = variable, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(map_rates2_m, aes(x = variable, y = value, color = variable, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(map_rates2_m, aes(x = variable, y = value, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
View(r)
survival_rates2 <- cbind(t[,c(1,17)], r[,c(17)])
colnames(survival_rates2) <- c("sample", "surv_rates_all", "surv_rates_26")
library(reshape2)
survival_rates2_m <-melt(survival_rates2, id.vars = c("sample"))
library(ggplot2)
ggplot(survival_rates2_m, aes(x = variable, y = value, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
multi_rates2 <- cbind(t[,c(1,15)], r[,c(15)])
colnames(multi_rates2) <- c("sample", "multi_rates_all", "multi_rates_26")
library(reshape2)
multi_rates2_m <-melt(multi_rates2, id.vars = c("sample"))
library(ggplot2)
ggplot(multi_rates2_m, aes(x = variable, y = value, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads mapping uniquely") +
xlab(label = "") + theme(legend.position="none")
ggplot(survival_rates2_m, aes(x = variable, y = value, fill =variable)) +
geom_boxplot() +
scale_fill_brewer(palette="Dark2") +
geom_point(shape=16, colour = "Black") +
scale_x_discrete(labels=c("Full assembly", "26 scaffolds")) +
ylab(label = "Percentage of reads with MQ > 20") +
xlab(label = "") + theme(legend.position="none")
mean(t$surviving_MQ)
mean(t$reads_surviving_MQ_p)
mean(r$reads_surviving_MQ_p)
mean(t$multimapping_p)
mean(r$multimapping_p)
mean(t$unmapped_p)
mean(r$unmapped_p)
r <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2_26scaffolds.txt", header = T)
r$mapping_rate <- (r$reads_mapped/(r$reads_total))*100
r$uniq_mapping_rate <- (r$uniquely_mapped/(r$reads_total))*100
r$multimapping_reads <- (r$reads_mapped - r$uniquely_mapped)
r$multimapping_p <- (r$multimapping_reads/(r$reads_total))*100
r$unmapped_p <- (r$reads_unmapped/(r$reads_total))*100
r$reads_surviving_MQ_p <- (r$surviving_MQ/(r$reads_total))*100
View(r)
mean(r$reads_total)
mean(r$surviving_MQ)
mean(r$multimapping_p)
mean(r$unmapped_p)
mean(r$error_rate)
mean(r$duplication_per)
mean(r$uniquely_mapped_p)
mean(r$uniq_mapping_rate)
mean(r$reads_surviving_MQ_p)
t <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2.txt", header = T)
t$mapping_rate <- (t$reads_mapped/(t$reads_total))*100
t$uniq_mapping_rate <- (t$uniquely_mapped/(t$reads_total))*100
t$multimapping_reads <- (t$reads_mapped - t$uniquely_mapped)
t$multimapping_p <- (t$multimapping_reads/(t$reads_total))*100
t$unmapped_p <- (t$reads_unmapped/(t$reads_total))*100
t$reads_surviving_MQ_p <- (t$surviving_MQ/(t$reads_total))*100
mean(t$surviving_MQ)
mean(t$reads_surviving_MQ_p)
View(t)
View(r)
mean(t$surviving_MQ)
mean(t$uniq_mapping_rate)
mean(t$multimapping_p)
mean(t$unmapped_p)
mean(t$error_rate)
mean(t$duplication_per)
r <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2_26scaffolds.txt", header = T)
species <- substr(r$ind, 3, 5)
r$species <- species
r$mapping_rate <- (r$reads_mapped/(r$reads_total))*100
r$uniq_mapping_rate <- (r$uniquely_mapped/(r$reads_total))*100
r$multimapping_reads <- (r$reads_mapped - r$uniquely_mapped)
r$multimapping_p <- (r$multimapping_reads/(r$reads_total))*100
r$unmapped_p <- (r$reads_unmapped/(r$reads_total))*100
r$reads_surviving_MQ_p <- (r$surviving_MQ/(r$reads_total))*100
# Make boxplots of mapping rates
# Make color palette
library(RColorBrewer)
nb.cols <- 22
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
r$species <- species
View(r)
species <- substr(r$ind, 3, 5)
r$species <- species
View(r)
species
r$species
# Same for survival rate (high quality, uniquely mapping reads)
survival_counts <- cbind(r[,c(1,12,10)])
View(survival_counts)
colnames(survival_rates) <- c("sample", "species", "Survival_reads")
colnames(survival_counts) <- c("sample", "species", "Survival_reads")
ggplot(survival_counts, aes(x = species, y = Survival_rate, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Percentage of reads with MQ > 20 to T.lei assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
# Make boxplots of uniquely mapping rates
library(ggplot2)
ggplot(survival_counts, aes(x = species, y = Survival_rate, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Percentage of reads with MQ > 20 to T.lei assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
ggplot(survival_counts, aes(x = species, y = Survival_reads, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Percentage of reads with MQ > 20 to T.lei assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
ggplot(survival_counts, aes(x = species, y = Survival_reads, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Number of reads with MQ > 20 to T.lei26 assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
r <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2_26scaffolds.txt", header = T)
View(r)
species <- substr(r$ind, 3, 5)
r$species <- species
r$mapping_rate <- (r$reads_mapped/(r$reads_total))*100
r$uniq_mapping_rate <- (r$uniquely_mapped/(r$reads_total))*100
r$multimapping_reads <- (r$reads_mapped - r$uniquely_mapped)
r$multimapping_p <- (r$multimapping_reads/(r$reads_total))*100
r$unmapped_p <- (r$reads_unmapped/(r$reads_total))*100
r$reads_surviving_MQ_p <- (r$surviving_MQ/(r$reads_total))*100
r$reads_surviving_not_DP <- r$surviving_MQ*(1-r$duplication_per)
mmean(r$reads_surviving_not_DP)
mean(r$reads_surviving_not_DP)
library(ggplot2)
## To remove individuals with low data quality / amount
boxplot(r$reads_surviving_not_DP)
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_point(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
xlab(label = "") + theme(legend.position="none")
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_point(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
geom_line(y = 500000)
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_point(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
geom_hline(yintercept=500000) +
xlab(label = "") + theme(legend.position="none")
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_jitter(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
geom_hline(yintercept=500000) +
xlab(label = "") + theme(legend.position="none")
setwd('/Users/clara/bio-info_phd/Comparative_genomics/Circular_figure/')
# Read in genic content
Tfas_onetoone <- read.table("Tfas_one-to-one_gene_counts_1Mb_windows_curated_ogs.25scaffolds.txt", header = T)
Tlei_onetoone <- read.table("Tlei_one-to-one_gene_counts_1Mb_windows_curated_ogs.25scaffolds.txt", header = T)
Tfas_onetoone$V2 <- (Tfas_onetoone$V2)/1000000
Tlei_onetoone$start_window <- (Tlei_onetoone$start_window)/1000000
# Read in repetitive content
Tfas_rep <- read.table("TE_content_Tfas_per1MBwindow_py.txt", header = T)
Tfas_rep$start_window <- (Tfas_rep$start_window)/1000000
Tlei_rep <- read.table("TE_content_Tlei_per1MBwindow_py.txt", header = T)
Tlei_rep$start_window <- (Tlei_rep$start_window)/1000000
summary(Tfas_rep)
View(Tlei_onetoone)
View(Tlei_onetoone)
chr26_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10427",]
View(chr26_lei)
plot(chr26_lei$gene_count~chr26_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr2",)
chr26_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10424",]
chr26_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10424",]
plot(chr26_lei$gene_count~chr26_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr2",)
chr26_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10432",]
plot(chr26_lei$gene_count~chr26_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr2",)
axis(1, xaxp  = c(0, 60, 12), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr2_lei$start_window[chr2_lei$start_window>=0], max(chr2_lei$start_window), 0), c(chr2_lei$gene_count[chr2_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
chr24_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10432",]
plot(chr24_lei$gene_count~chr24_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr2",)
axis(1, xaxp  = c(0, 60, 12), las=1)
axis(1, xaxp  = c(0, 9, 1), las=1)
View(chr26_lei)
View(chr24_lei)
axis(1, xaxp  = c(0, 9, 2), las=1)
chr24_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10432",]
plot(chr24_lei$gene_count~chr24_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr24",)
axis(1, xaxp  = c(0, 9, 2), las=1)
axis(1, xaxp  = c(0, 9, 4), las=1)
axis(1, xaxp  = c(0, 9, 3), las=1)
chr24_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10432",]
plot(chr24_lei$gene_count~chr24_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr24",)
axis(1, xaxp  = c(0, 9, 3), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr24_lei$start_window[chr24_lei$start_window>=0], max(chr24_lei$start_window), 0), c(chr24_lei$gene_count[chr24_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
# Repetitive content
Tlei_chr24_rep <- Tlei_rep[Tlei_rep$chrom == "Tlei_chr24",]
plot(Tlei_chr24_rep$perc_te~Tlei_chr24_rep$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Proportion of masked bases",
xaxs = "i",
yaxs = "i",
col="orange",xaxt="n")+
title(main = "Repetitive content per 1 MB window on Tlei_chr2",)
axis(1, xaxp  = c(0, 60, 12), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(Tlei_chr24_rep$start_window[Tlei_chr24_rep$start_window>=0], max(Tlei_chr24_rep$start_window), 0), c(Tlei_chr24_rep$perc[Tlei_chr24_rep$start_window>=0], 0, 0),
col=adjustcolor("orange",alpha.f=0.7))
# Repetitive content
Tlei_chr24_rep <- Tlei_rep[Tlei_rep$chrom == "Tlei_chr24",]
plot(Tlei_chr24_rep$perc_te~Tlei_chr24_rep$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Proportion of masked bases",
xaxs = "i",
yaxs = "i",
col="orange",xaxt="n")+
title(main = "Repetitive content per 1 MB window on Tlei_chr24",)
axis(1, xaxp  = c(0, 9, 3), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(Tlei_chr24_rep$start_window[Tlei_chr24_rep$start_window>=0], max(Tlei_chr24_rep$start_window), 0), c(Tlei_chr24_rep$perc[Tlei_chr24_rep$start_window>=0], 0, 0),
col=adjustcolor("orange",alpha.f=0.7))
chr23_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10426",]
plot(chr23_lei$gene_count~chr23_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr24",)
View(chr23_lei)
axis(1, xaxp  = c(0, 10, 5), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr23_lei$start_window[chr23_lei$start_window>=0], max(chr23_lei$start_window), 0), c(chr23_lei$gene_count[chr23_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
plot(chr23_lei$gene_count~chr23_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr23",)
axis(1, xaxp  = c(0, 10, 5), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr23_lei$start_window[chr23_lei$start_window>=0], max(chr23_lei$start_window), 0), c(chr23_lei$gene_count[chr23_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
# Repetitive content
Tlei_chr23_rep <- Tlei_rep[Tlei_rep$chrom == "Tlei_chr23",]
plot(Tlei_chr23_rep$perc_te~Tlei_chr23_rep$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Proportion of masked bases",
xaxs = "i",
yaxs = "i",
col="orange",xaxt="n")+
title(main = "Repetitive content per 1 MB window on Tlei_chr23",)
axis(1, xaxp  = c(0, 10, 2), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
plot(Tlei_chr23_rep$perc_te~Tlei_chr23_rep$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Proportion of masked bases",
xaxs = "i",
yaxs = "i",
col="orange",xaxt="n")+
title(main = "Repetitive content per 1 MB window on Tlei_chr23",)
axis(1, xaxp  = c(0, 10, 5), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(Tlei_chr23_rep$start_window[Tlei_chr23_rep$start_window>=0], max(Tlei_chr23_rep$start_window), 0), c(Tlei_chr23_rep$perc[Tlei_chr23_rep$start_window>=0], 0, 0),
col=adjustcolor("orange",alpha.f=0.7))
chr22_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10431",]
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
View(chr22_lei)
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 11, 5), las=1)
axis(1, xaxp  = c(0, 12, 6), las=1)
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 12, 6), las=1)
axis(1, xaxp  = c(0, 11, 6), las=1)
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 11, 6), las=1)
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 11, 1), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
chr22_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10431",]
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 12, 2), las=1)
plot(chr22_lei$gene_count~chr22_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 12, 6), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr22_lei$start_window[chr22_lei$start_window>=0], max(chr22_lei$start_window), 0), c(chr22_lei$gene_count[chr22_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
# Repetitive content
Tlei_chr22_rep <- Tlei_rep[Tlei_rep$chrom == "Tlei_chr22",]
plot(Tlei_chr22_rep$perc_te~Tlei_chr22_rep$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Proportion of masked bases",
xaxs = "i",
yaxs = "i",
col="orange",xaxt="n")+
title(main = "Repetitive content per 1 MB window on Tlei_chr22",)
axis(1, xaxp  = c(0, 10, 5), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(Tlei_chr22_rep$start_window[Tlei_chr22_rep$start_window>=0], max(Tlei_chr22_rep$start_window), 0), c(Tlei_chr22_rep$perc[Tlei_chr22_rep$start_window>=0], 0, 0),
col=adjustcolor("orange",alpha.f=0.7))
chr21_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10430",]
chr21_lei <- Tlei_onetoone[Tlei_onetoone$chrom == "Scaffold_10430",]
plot(chr21_lei$gene_count~chr21_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,105),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr21",)
axis(1, xaxp  = c(0, 12, 6), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr21_lei$start_window[chr21_lei$start_window>=0], max(chr21_lei$start_window), 0), c(chr21_lei$gene_count[chr21_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
plot(chr21_lei$gene_count~chr21_lei$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Gene count",
xaxs = "i",
yaxs = "i",
col="seagreen",xaxt="n")+
title(main = "Gene count per 1 MB window on Tlei_chr21",)
axis(1, xaxp  = c(0, 12, 6), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(chr21_lei$start_window[chr21_lei$start_window>=0], max(chr21_lei$start_window), 0), c(chr21_lei$gene_count[chr21_lei$start_window>=0], 0, 0),
col=adjustcolor("seagreen",alpha.f=0.7))
# Repetitive content
Tlei_chr21_rep <- Tlei_rep[Tlei_rep$chrom == "Tlei_chr21",]
plot(Tlei_chr21_rep$perc_te~Tlei_chr21_rep$start_window, type="l", lwd=2.5,lty=1, ylim=c(0,100),
xlab="position (MB)",
ylab="Proportion of masked bases",
xaxs = "i",
yaxs = "i",
col="orange",xaxt="n")+
title(main = "Repetitive content per 1 MB window on Tlei_chr21",)
axis(1, xaxp  = c(0, 10, 5), las=1)
axis(1, tck=-0.015, col.ticks="black", xaxp = c(0,58, 58), labels = F)
polygon(c(Tlei_chr21_rep$start_window[Tlei_chr21_rep$start_window>=0], max(Tlei_chr21_rep$start_window), 0), c(Tlei_chr21_rep$perc[Tlei_chr21_rep$start_window>=0], 0, 0),
col=adjustcolor("orange",alpha.f=0.7))
