as.name(paste("mean_", i, sep = ""))
for (i in 1:9) {
as.name(paste("mean_", i, sep = "")) <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
}
as.name(paste("mean_", i, sep = "")) <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- as.name(paste("mean_", i, sep = ""))
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
for (i in 1:9) {
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- as.name(paste("mean_", i, sep = ""))
}
for (i in 1:9) {
df <- data.frame()
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- rbind(df,x)
}
View(df)
for (i in 1:9) {
df <- data.frame()
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- rbind(df,x)
}
View(df)
library(agricolae)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
View(df)
View(df)
i = 2
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
View(df)
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
df
for (i in 1:9) {
df <- matrix(nrow = 9, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
View(df)
for (i in 1:9) {
df <- matrix(nrow = 9, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
View(df)
View(df)
df <- matrix(nrow = 0, ncol = 2)
View(df)
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
df <- matrix(nrow = 0, ncol = 2)
for (i in 1:9) {
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
col.names(df) <- c("mean", "year")
colnames(df) <- c("mean", "year")
df <- as.data.frame(df)
colnames(df) <- c("mean", "year")
View(df)
lm(df$mean ~ df$year)
lm <- lm(df$mean ~ df$year)
anova(lm)
?rep
x <- rep("2001", 311)
x <- c(x, rep("2002", 274))
x <- c(x, rep("2003", 277))
x <- c(x, rep("2004", 273))
x <- c(x, rep("2005", 269))
x <- c(x, rep("2006", 264))
x <- c(x, rep("2007", 282))
x <- c(x, rep("2008", 299))
x <- c(x, rep("2009", 312))
x <- c(x, rep("2010", 342))
x <- rep("2001", 365)
x <- c(x, rep("2002", 365))
x <- c(x, rep("2003", 365))
x <- c(x, rep("2004", 365))
x <- c(x, rep("2005", 365))
x <- c(x, rep("2006", 365))
x <- c(x, rep("2007", 365))
x <- c(x, rep("2008", 365))
x <- c(x, rep("2009", 365))
x <- c(x, rep("2010", 365))
x <-
dat <- cbind(dat, x)
x <- rep("2001", 365)
x <- c(x, rep("2002", 365))
x <- c(x, rep("2003", 365))
x <- c(x, rep("2004", 366))
x <- c(x, rep("2005", 365))
x <- c(x, rep("2006", 365))
x <- c(x, rep("2007", 365))
x <- c(x, rep("2008", 366))
x <- c(x, rep("2009", 365))
x <- c(x, rep("2010", 365))
x <-
dat <- cbind(dat, x)
View(dat)
x <- year
colnames(dat[,5]) <- "year"
colnames(dat[,5]) <- c("year")
colnames(dat[5]) <- c("year")
colnames(dat) <- c("year")
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
View(dat)
colnames(dat[5]) <- c("Date","sulfate", "nitrate", "id", "year")
colnames(dat) <- c("Date","sulfate", "nitrate", "id", "year")
lm <- lm(dat$nitrate ~ dat$year)
anova(lm)
library((agricolae))
library((agricolae))
library(agricolae)
?LSD.test
LSD.test(lm, p.adj = c("bonferroni"))
LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
?kruskal
lsd <- LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd$groups
lm <- lm(dat$nitrate ~ dat$year)
anova(lm)
lsd <- LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd$groups
kruskal(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
krus <- kruskal(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
getmonitor <- function(id, directory, summarize = F){
if (summarize) {
file <- read.csv(paste(directory, id, ".csv", sep = ""))
as.data.frame((file))
print(summary(file))
file <- read.csv(paste(directory, id, ".csv", sep = ""))
file <- as.data.frame((file))
}
else {
csv = list.files(path = directory, pattern = ".csv", all.files = T,full.names = F)
file <- read.csv(file.path(directory, csv[id]))
file <- as.data.frame(file)
}
}
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
file <- getmonitor(218, "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
file <- getmonitor(218, "/Users/clara/Documents/Vienna/PopGen Grad School/Introductory course/R course/specdata/")
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/Introductory course/R course/specdata/")
head(dat)
x <- rep("2001", 365)
x <- c(x, rep("2002", 365))
x <- c(x, rep("2003", 365))
x <- c(x, rep("2004", 366))
x <- c(x, rep("2005", 365))
x <- c(x, rep("2006", 365))
x <- c(x, rep("2007", 365))
x <- c(x, rep("2008", 366))
x <- c(x, rep("2009", 365))
x <- c(x, rep("2010", 365))
dat <- cbind(dat, x)
lm <- lm(dat$nitrate ~ dat$x)
anova(lm)
library(agricolae)
lsd <- LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd <- LSD.test(dat$nitrate,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd <- LSD.test(dat$nitrate,trt =dat$x, 739, 49.04, p.adj = c("bonferroni"))
lsd
krus <- kruskal(dat$nitrate,trt =dat$x, 739, 49.04, p.adj = c("bonferroni"))
krus <- kruskal(dat$nitrate,trt =dat$x, 49.04, p.adj = c("bonferroni"))
krus <- kruskal(dat$nitrate,trt =dat$x, p.adj = c("bonferroni"))
krus
?sample
x <- c("a","c","t","g")
seq <- sample(x, size = 10000)
seq <- sample(x, size = 10000, replace = T)
seq <- sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25))
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = .1
no_mut = 1 - mut_rate
seq_mut <- sample(seq, size = 10000), prob = c(mut_rate, no_mut))
seq_mut <- sample(seq, size = 10000, prob = c(mut_rate, no_mut))
mutation <- sample(c(1,0), size = 10000, prob = c(mut_rate, no_mut))
mutation <- sample(c(1,0), size = 10000, prob = c(mut_rate, no_mut), replace = T)
seq_mut <- sample(seq, size = 10000, prob = mutation
seq_mut <- sample(seq, size = 10000, prob = mutation
)
is_mutation <- sample(c(FALSE,TRUE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
mutation <- sample(c(FALSE,TRUE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation
sum(is_mutation)
sum(is_mutation)/length(is_mutation)
seq_mut <- seq
seq[is_mutation] = sample(levels(seq), size = sum(is_mutation), replace = T, prob = c(1,1,1,1))
seq[is_mutation]
is_mutation
seq[TRUE]
mut_rate = .1
no_mut = 1 - mut_rate
mutation <- sample(c(FALSE,TRUE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
?sample
?chisq.test
chisq.test(seq, seq_mut)
mut_rate = .5
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .0000001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .0000001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation)
sum(mutation)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
sum(mutation)
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(is_mutation)/length(is_mutation) # real mut_rate deviates from the set one
sum(is_mutation)/length(mutation) # real mut_rate deviates from the set one
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = 1
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .00001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq_mut[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
mut_rate = 1
no_mut = 1 - mut_rate
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 1
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq_mut[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
test <- chisq.test(seq_mut, seq)
View(test)
dim(test)
test <- chisq.test(seq_mut, seq)
dim(test)
test_mutated <- function(dna, mut_rate) {
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(dna), prob = c(mut_rate, no_mut), replace = T)
dna_mut <- dna
dna[mutation] = sample(levels(dna), size = sum(mutation), replace = T, prob = c(1,1,1,1))
test <- chisq.test(dna_mut, dna)
return(test[[3]])
}
test[[3]]
test_mutated(seq, .5)
test_mutated(seq, 1)
test_mutated(seq, 1)
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
v <- matrix(ncol = 2, nrow = 0)
View(v)
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
pvalues <- c()
for (i in mr) {
pvalues = c(pvalues, test_mutated(seq, i))
}
plot(mr, -log10(pvalues), type = "1")
plot(mr, -log10(pvalues), type = "l")
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
pvalues <- c()
for (i in mr) {
pvalues = c(pvalues, test_mutated(seq, i))
return(pvalues)
}
plot(mr, -log10(pvalues), type = "l")
source('~/.active-rstudio-document')
install.packages("gplots")
## 4) Task4: Are the changes in yearly mean concentration of Nitrate and
#     Sulfate from 2001 to 2009 correlated?
# a) Calculate Pearson’s and Spearman’s correlation coefficients (?cor)
# b) Test if the correlation coefficients differ from 0 (cor.test)
library(agricolae)
View(dat)
setwd('/Users/clara/bio-info_phd/te-content/')
setwd('/Users/clara/bio-info_phd/te-content/')
te <- read.table("summary_TE_GCcontent_Leiboldiana.txt",header = F, sep = "\t")
View(te)
colnames(te) <- c("gene_id", "i", "GC", "GC-TE", "ATGC", "ATGC-TE", "N", "GC_perc",
"N_perc", "TE_perc", "GC-TE_perc")
te_50 <- te[te$TE_perc <= 0.5,]
te_75 <- te[te$TE_perc >= 0.75,]
te_25 <- te[te$TE_perc <= 0.25,]
te_10 <- te[te$TE_perc <= 0.1,]
te_0 <- te[te$TE_perc <= 0,]
library(ggplot2)
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "163 genes",col="red")+
annotate("text", x=0.40, y=5, label= "31061 genes",col="orange")+
annotate("text", x=0.15, y=5, label= "29804 genes",col="darkgreen")
te_50 <- te[te$TE_perc >= 0.5,]
te_25 <- te[te$TE_perc >= 0.25,]
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "1947 genes",col="red")+
annotate("text", x=0.40, y=5, label= "3896 genes",col="orange")+
annotate("text", x=0.15, y=5, label= "7067 genes",col="darkgreen")
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "1947 genes",col="red")+
annotate("text", x=0.60, y=5, label= "3896 genes",col="orange")+
annotate("text", x=0.15, y=5, label= "7067 genes",col="darkgreen")
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "1947 genes",col="red")+
annotate("text", x=0.60, y=5, label= "3896 genes",col="orange")+
annotate("text", x=0.55, y=5, label= "7067 genes",col="darkgreen")
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "1947 genes",col="red")+
annotate("text", x=0.60, y=5, label= "3896 genes",col="orange")+
annotate("text", x=0.35, y=5, label= "7067 genes",col="darkgreen")
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "1947 genes",col="red")+
annotate("text", x=0.60, y=5, label= "3896 genes",col="orange")+
annotate("text", x=0.35, y=5, label= "7067 genes",col="darkgreen")+
xlab("Masked percentage of CDS")+
ylab("Gene density")
ggplot(te, aes(TE_perc))  +
geom_density() +
theme_bw()+
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
theme(axis.line = element_line(colour = 'black', size = 1.25), axis.ticks = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=.5,face="plain"),
axis.title.x = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.2,face="italic"),
axis.title.y = element_text(colour="black",size=14,angle=90,hjust=.5,vjust=.5,face="italic"))+
geom_vline(xintercept=0.75,col="red")+
geom_vline(xintercept=0.5,col="orange")+
geom_vline(xintercept=0.25,col="darkgreen")+
annotate("text", x=0.84, y=5, label= "1947 genes",col="red")+
annotate("text", x=0.60, y=5, label= "3896 genes",col="orange")+
annotate("text", x=0.35, y=5, label= "7067 genes",col="darkgreen")+
xlab("Masked percentage of CDS")+
ylab("Gene density")+
labs(title = "Te content of T. leiboldiana gene models (maker R1)")
View(te_0)
