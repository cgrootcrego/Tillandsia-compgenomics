seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
?sample
?chisq.test
chisq.test(seq, seq_mut)
mut_rate = .5
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .0000001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .0000001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation)
sum(mutation)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
sum(mutation)
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(is_mutation)/length(is_mutation) # real mut_rate deviates from the set one
sum(is_mutation)/length(mutation) # real mut_rate deviates from the set one
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = 1
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .00001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq_mut[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
mut_rate = 1
no_mut = 1 - mut_rate
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 1
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq_mut[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
test <- chisq.test(seq_mut, seq)
View(test)
dim(test)
test <- chisq.test(seq_mut, seq)
dim(test)
test_mutated <- function(dna, mut_rate) {
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(dna), prob = c(mut_rate, no_mut), replace = T)
dna_mut <- dna
dna[mutation] = sample(levels(dna), size = sum(mutation), replace = T, prob = c(1,1,1,1))
test <- chisq.test(dna_mut, dna)
return(test[[3]])
}
test[[3]]
test_mutated(seq, .5)
test_mutated(seq, 1)
test_mutated(seq, 1)
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
v <- matrix(ncol = 2, nrow = 0)
View(v)
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
pvalues <- c()
for (i in mr) {
pvalues = c(pvalues, test_mutated(seq, i))
}
plot(mr, -log10(pvalues), type = "1")
plot(mr, -log10(pvalues), type = "l")
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
pvalues <- c()
for (i in mr) {
pvalues = c(pvalues, test_mutated(seq, i))
return(pvalues)
}
plot(mr, -log10(pvalues), type = "l")
source('~/.active-rstudio-document')
install.packages("gplots")
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
setwd("/Users/clara/bio-info_phd/assembly_stats/")
library(ggplot2)
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
fas <- read.table("length_fas")
lei <-sort(lei$V2, decreasing = T)
#lei <- order(lei$V2, decreasing = T)
fas$V1 <- sort(fas$V1, decreasing = T)
lei <- cbind(c(1:10433), lei)
colnames(lei) <- c("scaffold", "length_lei")
fas <- cbind(c(1:2321), fas)
colnames(fas) <- c("scaffold", "length_fas")
lei_25 <- lei[1:25,]
lei_25 <- as.data.frame(lei_25)
fas_25 <- fas[1:25,]
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
ggplot(both_25, aes(y=cumsum(T.leiboldiana))) + geom_line() + geom_point()
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "T.leiboldiana", "T.fasciculata")
ggplot(both_25, aes(x = scaffoldy=cumsum(T.leiboldiana))) + geom_line() + geom_point()
ggplot(both_25, aes(x = scaffold, y=cumsum(T.leiboldiana))) + geom_line() + geom_point()
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "T.leiboldiana", "T.fasciculata")
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(both_25, aes(x = scaffold, y=cumsum(length), group = species)) + geom_line() + geom_point()
lei <-sort(lei$V2, decreasing = F)
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
fas <- read.table("length_fas")
lei <-sort(lei$V2, decreasing = F)
#lei <- order(lei$V2, decreasing = T)
fas$V1 <- sort(fas$V1, decreasing = F)
lei <- cbind(c(1:10433), lei)
colnames(lei) <- c("scaffold", "length_lei")
fas <- cbind(c(1:2321), fas)
colnames(fas) <- c("scaffold", "length_fas")
lei_25 <- lei[1:25,]
lei_25 <- as.data.frame(lei_25)
fas_25 <- fas[1:25,]
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- as.data.frame(both_25)
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(both_25, aes(x = scaffold, y=cumsum(length), group = species)) + geom_line() + geom_point()
lei_25 <- lei[10408:10433,]
lei_25 <- as.data.frame(lei_25)
lei_25 <- lei[10409:10433,]
lei_25 <- as.data.frame(lei_25)
fas_25 <- fas[2297:2321,]
View(fas_25)
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(both_25, aes(x = scaffold, y=cumsum(length), group = species)) + geom_line() + geom_point()
View(fas_25)
cumul <- read.table("cumlength.csv")
View(cumul)
cumul <- read.table("cumlength.csv", sep = ";")
cumul <- read.table("cumlength.csv", sep = ";", header = T)
ggplot(cumul, aes(x = scaffold, y=cumulative, group=species)) + geom_line() + geom_point()
ggplot(both_25, aes(x = scaffold, y=cumsum(length), group = species)) + geom_line()
ggplot(cumul, aes(x = scaffold, y=cumulative, group=species)) + geom_line()
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
fas <- read.table("length_fas")
lei <-sort(lei$V2, decreasing = T)
fas$V1 <- sort(fas$V1, decreasing = T)
lei <- cbind(c(1:10433), lei)
colnames(lei) <- c("scaffold", "length_lei")
fas <- cbind(c(1:2321), fas)
colnames(fas) <- c("scaffold", "length_fas")
lei_25 <- lei[1:25,]
lei_25 <- as.data.frame(lei_25)
fas_25 <- fas[1:25,]
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(lei_25, aes(x = scaffold, y = length)) + geom_line()
ggplot(both_25, aes(x = values, colour = ind)) + geom_density()
ggplot(both_25, aes(x = scaffold, colour = species)) + geom_density()
ggplot(both_25, aes(x = scaffold, fill = species)) +
geom_histogram(position="dodge", binwidth = 1000000) +
scale_x_continuous(name="Scaffold size", breaks=seq(0, 70000000, 10000000)) +
labs(fill = "Species") +
ylab(label = "Number of scaffolds")
ggplot(both_25, aes(x = length, fill = species)) +
geom_histogram(position="dodge", binwidth = 1000000) +
scale_x_continuous(name="Scaffold size", breaks=seq(0, 70000000, 10000000)) +
labs(fill = "Species") +
ylab(label = "Number of scaffolds")
ggplot(both_25, aes(x = length, fill = species)) +
geom_density +
geom_histogram(position="dodge", binwidth = 1000000) +
scale_x_continuous(name="Scaffold size", breaks=seq(0, 70000000, 10000000)) +
labs(fill = "Species") +
ylab(label = "Number of scaffolds")
ggplot(both_25, aes(x = length, fill = species)) +
geom_density() +
geom_histogram(position="dodge", binwidth = 1000000) +
scale_x_continuous(name="Scaffold size", breaks=seq(0, 70000000, 10000000)) +
labs(fill = "Species") +
ylab(label = "Number of scaffolds")
View(fas)
lei_i <-sort(lei$V2, decreasing = T)
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
lei_i <-sort(lei$V2, decreasing = F)
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
lei_i <-sort(lei$V2, decreasing = F)
lei_i <- cbind(c(1:10433), lei_i)
View(lei_i)
View(lei_i)
nrow(lei_i)
c <- c()
x = 0
c <- c()
x = 0
for (i in 1:nrow(lei_i)){
x = x + lei_i[2,i]
c <- c(c,x)
}
x = 0
lei_i[2,1]
c <- c()
x = 0
for (i in 1:nrow(lei_i)){
x = x + lei_i[i,2]
c <- c(c,x)
}
lei_i <- cbind(lei_i,c)
stack(lei_i)
View(cumul)
lei_i <-sort(lei$V2, decreasing = F)
lei_i <- cbind(c(1:10433), lei_i)
c <- cbind(1:10433,c)
c <- cas.data.frame(cbind(1:10433,c))
c <- as.data.frame(cbind(1:10433,c))
View(c)
c <- c()
x = 0
for (i in 1:nrow(lei_i)){
x = x + lei_i[i,2]
c <- c(c,x)
}
c <- as.data.frame(cbind(1:10433,c))
fas_i <- sort(fas$V1, decreasing = F)
View(fas)
fas$V1 <- sort(fas$V1, decreasing = F)
fas_i <- sort(fas$V1, decreasing = F)
fas_i <- sort(fas$length_fas, decreasing = F)
fas_i <- cbind(c(1:2321), fas_i)
lei_cumul <- c
c <- c()
x = 0
for (i in 1:nrow(fas_i)){
x = x + lei_i[i,2]
c <- c(c,x)
}
c <- c()
x = 0
for (i in 1:nrow(fas_i)){
x = x + fas_i[i,2]
c <- c(c,x)
}
c <- as.data.frame(cbind(1:2321,c))
fas_cumul <- c
View(lei_cumul)
colnames(lei_cumul) <- c("scaffold", "T.leiboldiana")
stack(lei_cumul)
c <- c()
x = 0
for (i in 1:nrow(lei_i)){
x = x + lei_i[i,2]
c <- c(c,x)
}
lei_cumul <- as.data.frame(c)
View(lei_cumul)
colnames(lei_cumul) <- c("T.leiboldiana")
stack(lei_cumul)
lei_cumul <- stack(lei_cumul)
c <- c()
x = 0
for (i in 1:nrow(fas_i)){
x = x + fas_i[i,2]
c <- c(c,x)
}
fas_cumul <- as.data.frame(c)
colnames(fas_cumul) <- c("T.fasciculata")
fas_cumul <- stack(fas_cumul)
View(fas_cumul)
cumulative_both <- rbind(fas_cumul, lei_cumul)
View(cumulative_both)
cumulative_both <- cbind(c(1:2321,1:10433), cumulative_both)
View(cumulative_both)
colnames(cumulative_both) <- c("scaffold", "length", "species")
ggplot(cumulative_both, aes(x = scaffold, y=length, group=species)) + geom_line()
c <- c()
x = 0
for (i in 1:nrow(lei)){
x = x + lei[i,2]
c <- c(c,x)
}
View(lei)
lei <-sort(lei$V2, decreasing = T)
c <- c()
x = 0
for (i in 1:nrow(lei)){
x = x + lei[i,2]
c <- c(c,x)
}
lei_cumul <- as.data.frame(c)
colnames(lei_cumul) <- c("T.leiboldiana")
lei_cumul <- stack(lei_cumul)
fas$V1 <- sort(fas$V1, decreasing = T)
View(fas)
c <- c()
x = 0
for (i in 1:nrow(fas)){
x = x + fas[i,2]
c <- c(c,x)
}
c <- c()
x = 0
for (i in 1:nrow(lei_i)){
x = x + lei_i[i,2]
c <- c(c,x)
}
lei_cumul <- as.data.frame(c)
colnames(lei_cumul) <- c("T.leiboldiana")
lei_cumul <- stack(lei_cumul)
lei_cumul <- stack(lei_cumul)
lei_cumul <- as.data.frame(c)
View(lei_cumul)
colnames(lei_cumul) <- c("T.leiboldiana")
lei_cumul <- stack(lei_cumul)
lei_cumul$values <- sort(lei_cumul$values)
c <- c()
x = 0
for (i in 1:nrow(fas_i)){
x = x + fas_i[i,2]
c <- c(c,x)
}
fas_cumul <- as.data.frame(c)
colnames(fas_cumul) <- c("T.fasciculata")
fas_cumul <- stack(fas_cumul)
fas_cumul$values <- sort(fas_cumul$values)
lei_cumul$values <- sort(lei_cumul$values, decreasing = T)
fas_cumul$values <- sort(fas_cumul$values, decreasing = T)
cumulative_both <- rbind(fas_cumul, lei_cumul)
cumulative_both <- cbind(c(1:2321,1:10433), cumulative_both)
colnames(cumulative_both) <- c("scaffold", "length", "species")
ggplot(cumulative_both, aes(x = scaffold, y=length, group=species)) + geom_line()
lei_25 <- lei[1:30,]
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
fas <- read.table("length_fas")
lei <-sort(lei$V2, decreasing = T)
fas$V1 <- sort(fas$V1, decreasing = T)
lei <- cbind(c(1:10433), lei)
fas <- cbind(c(1:2321), fas)
lei_30 <- lei[1:30,]
25
lei_25 <- lei[1:30,]
lei_25 <- as.data.frame(lei_25)
fas_25 <- fas[1:30,]
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
both_25 <- cbind(lei_25, fas_25)
View(both_25)
View(lei_25)
both_25 <- cbind(lei_25$lei, fas_25$length_fas)
View(fas_25)
both_25 <- cbind(lei_25$lei, fas_25$V1)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- sort(both_25)
both_25$T.leiboldiana <- sort(both_25$T.leiboldiana)
both_25 <- cbind(lei_25$lei, fas_25$V1)
both_25 <- as.data.frame(both_25)
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
cumulative_50 <- cumulative_both[1:50,]
View(cumulative_50)
cumulative_50 <- cumulative_both[c(1:50,2322:2372),]
View(cumulative_50)
cumulative_50 <- cumulative_both[c(1:50,2322:2371),]
ggplot(cumulative_50, aes(x = scaffold, y=length, group=species)) + geom_line()
# Read raw files
lei <- read.table("scaffoldLengths_Tlei_new_assembly.txt")
fas <- read.table("length_fas")
# Display length distribution of 25 largest scaffolds as histogram
lei <-sort(lei$V2, decreasing = T)
fas$V1 <- sort(fas$V1, decreasing = T)
lei <- cbind(c(1:10433), lei)
colnames(lei) <- c("scaffold", "length_lei")
fas <- cbind(c(1:2321), fas)
colnames(fas) <- c("scaffold", "length_fas")
lei_25 <- lei[1:25,]
lei_25 <- lei[1:25,]
fas_25 <- fas[1:25,]
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
lei_25 <- as.data.frame(lei_25)
both_25 <- cbind(lei_25$length_lei, fas_25$length_fas)
lei_25 <- as.data.frame(lei[1:25,])
fas_25 <- fas[1:25,]
both_25 <- as.data.frame(cbind(lei_25$length_lei, fas_25$length_fas))
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(lei_25, aes(x = scaffold, y = length)) + geom_line()
ggplot(lei_25, aes(x = scaffold, y = length_lei)) + geom_line()
ggplot(fas_25, aes(x = scaffold, y = length_fas)) + geom_line()
# Create histogram of size distribution of 25 largesst scaffolds
both_25 <- as.data.frame(cbind(lei_25$length_lei, fas_25$length_fas))
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(both_25, aes(x = scaffold, colour = species)) + geom_density()
ggplot(both_25, aes(x = length, fill = species)) +
geom_density() +
geom_histogram(position="dodge", binwidth = 1000000) +
scale_x_continuous(name="Scaffold size", breaks=seq(0, 70000000, 10000000)) +
labs(fill = "Species") +
ylab(label = "Number of scaffolds")
# Create density plot of size distribution of 25 largest scaffolds
both_25 <- as.data.frame(cbind(lei_25$length_lei, fas_25$length_fas))
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
# Create histogram of size distribution of 25 largest scaffolds
both_25_ <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(both_25, aes(x = length, colour = species)) + geom_density()
# Create density plot of size distribution of 25 largest scaffolds
both_25 <- as.data.frame(cbind(lei_25$length_lei, fas_25$length_fas))
colnames(both_25) <- c("T.leiboldiana", "T.fasciculata")
# Create histogram of size distribution of 25 largest scaffolds
both_25_ <- stack(both_25)
# Create histogram of size distribution of 25 largest scaffolds
both_25 <- stack(both_25)
both_25 <- cbind(c(1:25), both_25)
colnames(both_25) <- c("scaffold", "length", "species")
ggplot(both_25, aes(x = length, colour = species)) + geom_density()
# Obtain cumulative values of scaffold length
lei_i <-sort(lei$V2, decreasing = F)
setwd("/Users/clara/bio-info_phd/liftoff_tfas_tlei/")
d <- read.table('CNV_Tlei_s0.8_sc0.99_real_genes.txt')
colnames(d) <- c("CN", "geneID")
library("ggplot2")
library(wesanderson)
ggplot(data = d, aes(x=CN)) + geom_histogram()
duplicated <- d[d$CN > 1,]
View(duplicated)
