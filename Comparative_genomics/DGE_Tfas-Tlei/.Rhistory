ggplot(new, aes(x = new$Nobs, y = new$Correlation)) + geom_point()
ggplot(new, aes(x = new$Correlation, y = new$Nobs) + geom_point()
ggplot(new, aes(x = new$Correlation, y = new$Nobs) + geom_point()
ggplot(new, aes(x = new$Correlation, y = new$Nobs)) + geom_point()
ggplot(new, aes(x = new$Nobs, y = new$Correlation)) + geom_point()
?Dates
class(file$Date)
ggplot(file, aes(x = file$Date, y = file$sulfate)) + geom_point()
ggplot(file, aes(x = file$Date, y = file$nitrate)) + geom_point()
file <- getmonitor(218, "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
ggplot(file, aes(x = file$Date, y = file$nitrate)) + geom_point()
install.packages("agricolae")
getmonitor <- function(id, directory, summarize = F){
if (summarize) {
file <- read.csv(paste(directory, id, ".csv", sep = ""))
as.data.frame((file))
print(summary(file))
file <- read.csv(paste(directory, id, ".csv", sep = ""))
file <- as.data.frame((file))
}
else {
csv = list.files(path = directory, pattern = ".csv", all.files = T,full.names = F)
file <- read.csv(file.path(directory, csv[id]))
file <- as.data.frame(file)
}
}
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
head(dat)
View(dat)
factor(sapply(dat[,1], function(x) substr(x, start = 1, stop = 4)))
year <- factor(sapply(dat[,1], function(x) substr(x, start = 1, stop = 4)))
complete <- function(id = 1:332, dir){
csv = list.files(path = dir, pattern = ".csv", all.files = T,full.names = F)
df <- matrix(nrow = 0, ncol = 2)
for (i in id) {
if (file.exists(file.path(dir, csv[i]))) {
file <- read.csv(file.path(dir, csv[i]))
file <- na.omit(file)
nobs = dim(file)[1]
col <- c(i, nobs)
df <- rbind(df, col)
}
else {
print(paste("Error", i))
}
}
df <- as.data.frame(df)
colnames(x = df) <- c("ID", "Nobs")
row.names(df) <- id
return(df)
}
yearly.nobs.nitrate <- tapply(dat[,3], year, function(x) return(c(sum(is.na(x)), sim(!is.na(x)))))
yearly.nobs.nitrate <- tapply(dat[,3], year, function(x) return(c(sum(is.na(x)), sum(!is.na(x)))))
View(yearly.nobs.nitrate)
yearly.nobs.nitrate <- tapply(dat[,3], year, function(x) {
return(c(sum(is.na(x)), sum(!is.na(x))))})
year
?tapply
?chisq.test()
chisq.test(yearly.nobs.nitrate[1], yearly.nobs.nitrate[9])
yearly.nobs.nitrate[1]
v <- yearly.nobs.nitrate[1]
v
View(v)
v <- yearly.nobs.nitrate[1,3]
v <- yearly.nobs.nitrate[1][3]
View(v)
yearly.nobs.nitrate[1][3]
yearly.nobs.nitrate[[1]]
chisq.test(yearly.nobs.nitrate[[1]], yearly.nobs.nitrate[[9]])
chisq.test(rbind(yearly.nobs.nitrate[[1]], yearly.nobs.nitrate[[9]])
chisq.test(rbind(yearly.nobs.nitrate[[1]], yearly.nobs.nitrate[[9]]))
chisq.test(rbind(yearly.nobs.nitrate[[1]], yearly.nobs.nitrate[[10]]))
fisher.test((rbind(yearly.nobs.nitrate[[1]], yearly.nobs.nitrate[[10]])))
m01 <- mean(dat[yearly.nobs.nitrate[[1]]])
yearly.nobs.nitrate[[1]]
m01 <- mean(dat[dat$Date == "2001*"])
m01 <- mean(dat[dat$Date == "2001"])
dat[dat$Date == "2001.",]
dat[dat$Date %in% "2001",]
grep("2001",dat$Date)
m01 <- mean(dat$nitrate[grep("2001",dat$Date),])
m01 <- mean(dat$nitrate[grep("2001",dat$Date)])
m01 <- mean(dat$nitrate[grep("2001",dat$Date)],na.rm = T)
m09 <- mean(dat$nitrate[grep("2009",dat$Date)],na.rm = T)
?t.test
nitrate_01 <- na.omit(dat$nitrate[grep("2001",dat$Date)])
nitrate_09 <- na.omit(dat$nitrate[grep("2009",dat$Date)])
t.test(nitrate_01, nitrate_09)
?wilcox.test
wilcox.test(nitrate_01, nitrate_09)
?anova
?lm
for (i in 1:9) {
mean_i <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
}
i in 1:9
i = 1
paste("200", i, sep = ""
)
mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- paste("mean_", i, sep = "")
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x_i
as.name(paste("mean_", i, sep = ""))
for (i in 1:9) {
as.name(paste("mean_", i, sep = "")) <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
}
as.name(paste("mean_", i, sep = "")) <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- as.name(paste("mean_", i, sep = ""))
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
for (i in 1:9) {
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- as.name(paste("mean_", i, sep = ""))
}
for (i in 1:9) {
df <- data.frame()
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- rbind(df,x)
}
View(df)
for (i in 1:9) {
df <- data.frame()
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
df <- rbind(df,x)
}
View(df)
library(agricolae)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
View(df)
View(df)
i = 2
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
View(df)
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
df
for (i in 1:9) {
df <- matrix(nrow = 9, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
View(df)
for (i in 1:9) {
df <- matrix(nrow = 9, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
View(df)
View(df)
df <- matrix(nrow = 0, ncol = 2)
View(df)
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- cbind(df,x)
}
for (i in 1:9) {
df <- matrix(nrow = 0, ncol = 2)
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
df <- matrix(nrow = 0, ncol = 2)
for (i in 1:9) {
x <- mean(dat$nitrate[grep(paste("200", i, sep = ""),dat$Date)],na.rm = T)
x <- c(x, paste("200", i, sep = ""))
df <- rbind(df,x)
}
col.names(df) <- c("mean", "year")
colnames(df) <- c("mean", "year")
df <- as.data.frame(df)
colnames(df) <- c("mean", "year")
View(df)
lm(df$mean ~ df$year)
lm <- lm(df$mean ~ df$year)
anova(lm)
?rep
x <- rep("2001", 311)
x <- c(x, rep("2002", 274))
x <- c(x, rep("2003", 277))
x <- c(x, rep("2004", 273))
x <- c(x, rep("2005", 269))
x <- c(x, rep("2006", 264))
x <- c(x, rep("2007", 282))
x <- c(x, rep("2008", 299))
x <- c(x, rep("2009", 312))
x <- c(x, rep("2010", 342))
x <- rep("2001", 365)
x <- c(x, rep("2002", 365))
x <- c(x, rep("2003", 365))
x <- c(x, rep("2004", 365))
x <- c(x, rep("2005", 365))
x <- c(x, rep("2006", 365))
x <- c(x, rep("2007", 365))
x <- c(x, rep("2008", 365))
x <- c(x, rep("2009", 365))
x <- c(x, rep("2010", 365))
x <-
dat <- cbind(dat, x)
x <- rep("2001", 365)
x <- c(x, rep("2002", 365))
x <- c(x, rep("2003", 365))
x <- c(x, rep("2004", 366))
x <- c(x, rep("2005", 365))
x <- c(x, rep("2006", 365))
x <- c(x, rep("2007", 365))
x <- c(x, rep("2008", 366))
x <- c(x, rep("2009", 365))
x <- c(x, rep("2010", 365))
x <-
dat <- cbind(dat, x)
View(dat)
x <- year
colnames(dat[,5]) <- "year"
colnames(dat[,5]) <- c("year")
colnames(dat[5]) <- c("year")
colnames(dat) <- c("year")
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
View(dat)
colnames(dat[5]) <- c("Date","sulfate", "nitrate", "id", "year")
colnames(dat) <- c("Date","sulfate", "nitrate", "id", "year")
lm <- lm(dat$nitrate ~ dat$year)
anova(lm)
library((agricolae))
library((agricolae))
library(agricolae)
?LSD.test
LSD.test(lm, p.adj = c("bonferroni"))
LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
?kruskal
lsd <- LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd$groups
lm <- lm(dat$nitrate ~ dat$year)
anova(lm)
lsd <- LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd$groups
kruskal(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
krus <- kruskal(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
getmonitor <- function(id, directory, summarize = F){
if (summarize) {
file <- read.csv(paste(directory, id, ".csv", sep = ""))
as.data.frame((file))
print(summary(file))
file <- read.csv(paste(directory, id, ".csv", sep = ""))
file <- as.data.frame((file))
}
else {
csv = list.files(path = directory, pattern = ".csv", all.files = T,full.names = F)
file <- read.csv(file.path(directory, csv[id]))
file <- as.data.frame(file)
}
}
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
file <- getmonitor(218, "/Users/clara/Documents/Vienna/PopGen Grad School/R course/specdata/")
file <- getmonitor(218, "/Users/clara/Documents/Vienna/PopGen Grad School/Introductory course/R course/specdata/")
dat <- getmonitor(29, directory = "/Users/clara/Documents/Vienna/PopGen Grad School/Introductory course/R course/specdata/")
head(dat)
x <- rep("2001", 365)
x <- c(x, rep("2002", 365))
x <- c(x, rep("2003", 365))
x <- c(x, rep("2004", 366))
x <- c(x, rep("2005", 365))
x <- c(x, rep("2006", 365))
x <- c(x, rep("2007", 365))
x <- c(x, rep("2008", 366))
x <- c(x, rep("2009", 365))
x <- c(x, rep("2010", 365))
dat <- cbind(dat, x)
lm <- lm(dat$nitrate ~ dat$x)
anova(lm)
library(agricolae)
lsd <- LSD.test(lm,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd <- LSD.test(dat$nitrate,trt = 739, 49.04, p.adj = c("bonferroni"))
lsd <- LSD.test(dat$nitrate,trt =dat$x, 739, 49.04, p.adj = c("bonferroni"))
lsd
krus <- kruskal(dat$nitrate,trt =dat$x, 739, 49.04, p.adj = c("bonferroni"))
krus <- kruskal(dat$nitrate,trt =dat$x, 49.04, p.adj = c("bonferroni"))
krus <- kruskal(dat$nitrate,trt =dat$x, p.adj = c("bonferroni"))
krus
?sample
x <- c("a","c","t","g")
seq <- sample(x, size = 10000)
seq <- sample(x, size = 10000, replace = T)
seq <- sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25))
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = .1
no_mut = 1 - mut_rate
seq_mut <- sample(seq, size = 10000), prob = c(mut_rate, no_mut))
seq_mut <- sample(seq, size = 10000, prob = c(mut_rate, no_mut))
mutation <- sample(c(1,0), size = 10000, prob = c(mut_rate, no_mut))
mutation <- sample(c(1,0), size = 10000, prob = c(mut_rate, no_mut), replace = T)
seq_mut <- sample(seq, size = 10000, prob = mutation
seq_mut <- sample(seq, size = 10000, prob = mutation
)
is_mutation <- sample(c(FALSE,TRUE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
mutation <- sample(c(FALSE,TRUE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation
sum(is_mutation)
sum(is_mutation)/length(is_mutation)
seq_mut <- seq
seq[is_mutation] = sample(levels(seq), size = sum(is_mutation), replace = T, prob = c(1,1,1,1))
seq[is_mutation]
is_mutation
seq[TRUE]
mut_rate = .1
no_mut = 1 - mut_rate
mutation <- sample(c(FALSE,TRUE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
?sample
?chisq.test
chisq.test(seq, seq_mut)
mut_rate = .5
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .0000001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .0000001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(is_mutation)
sum(mutation)
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
sum(mutation)
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(is_mutation)/length(is_mutation) # real mut_rate deviates from the set one
sum(is_mutation)/length(mutation) # real mut_rate deviates from the set one
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = 1
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq, seq_mut)
mut_rate = .00001
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 0
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq_mut[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
mut_rate = 1
no_mut = 1 - mut_rate
set.seed(1) #Gives you the same DNA sequence even if you run the next command twice
x <- c("a","c","t","g")
seq <- as.factor(sample(x, size = 10000, replace = T, prob = c(.25,.25,.25,.25)))
head(seq, 50)
mut_rate = 1
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(seq), prob = c(mut_rate, no_mut), replace = T)
sum(mutation)
sum(mutation)/length(mutation) # real mut_rate deviates from the set one
seq_mut <- seq
seq_mut[mutation] = sample(levels(seq), size = sum(mutation), replace = T, prob = c(1,1,1,1))
chisq.test(seq_mut, seq)
test <- chisq.test(seq_mut, seq)
View(test)
dim(test)
test <- chisq.test(seq_mut, seq)
dim(test)
test_mutated <- function(dna, mut_rate) {
no_mut = 1 - mut_rate
mutation <- sample(c(TRUE,FALSE), size = length(dna), prob = c(mut_rate, no_mut), replace = T)
dna_mut <- dna
dna[mutation] = sample(levels(dna), size = sum(mutation), replace = T, prob = c(1,1,1,1))
test <- chisq.test(dna_mut, dna)
return(test[[3]])
}
test[[3]]
test_mutated(seq, .5)
test_mutated(seq, 1)
test_mutated(seq, 1)
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
v <- matrix(ncol = 2, nrow = 0)
View(v)
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
pvalues <- c()
for (i in mr) {
pvalues = c(pvalues, test_mutated(seq, i))
}
plot(mr, -log10(pvalues), type = "1")
plot(mr, -log10(pvalues), type = "l")
mr <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
pvalues <- c()
for (i in mr) {
pvalues = c(pvalues, test_mutated(seq, i))
return(pvalues)
}
plot(mr, -log10(pvalues), type = "l")
source('~/.active-rstudio-document')
install.packages("gplots")
setwd("bio-info_phd/DGE_Tfas-Tlei/")
Tfas <- read.table("DE_genes_logFC_4_Tfas_PM-AM.txt")
View(Tfas)
d <- read.table("go_enrichment.csv")
d <- read.table("go_enrichment.csv", header = T)
d <- read.table("go_enrichment.csv", header = T, sep=",")
View(d)
d <- read.table("go_enrichment.csv", header = T)
d <- read.csv("go_enrichment.csv", header = T)
d <- read.csv("go_enrichment.csv", header = T, sep = ";")
View(d)
library(ggplot)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(data = d, aes(x = time, y = malate_transport)) + geom_bar(stat = "identity")
ggplot(data = d, aes(x = species, y = malate_transport, fill = time)) + geom_bar(stat = "identity")
ggplot(data = d, aes(x = species, y = carbon_fixation, fill = time)) + geom_bar(stat = "identity")
ggplot(data = d, aes(x = species, y = carbon_fixation, fill = time)) +
geom_bar(stat = "identity", position = position_dodge)
ggplot(data = d, aes(x = species, y = carbon_fixation, fill = time)) +
geom_bar(stat = "identity", position = position_dodge())
d <- read.csv("go_enrichment.csv", header = T, sep = ";")
ggplot(data = d, aes(x = species, y = carbon_fixation, fill = time)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(data = d, aes(x = species, y = circadian_rhythm, fill = time)) +
geom_bar(stat = "identity", position = position_dodge())
