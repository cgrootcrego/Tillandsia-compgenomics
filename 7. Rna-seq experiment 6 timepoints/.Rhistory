mean(r$reads_surviving_MQ_p)
mean(t$multimapping_p)
mean(r$multimapping_p)
mean(t$unmapped_p)
mean(r$unmapped_p)
r <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2_26scaffolds.txt", header = T)
r$mapping_rate <- (r$reads_mapped/(r$reads_total))*100
r$uniq_mapping_rate <- (r$uniquely_mapped/(r$reads_total))*100
r$multimapping_reads <- (r$reads_mapped - r$uniquely_mapped)
r$multimapping_p <- (r$multimapping_reads/(r$reads_total))*100
r$unmapped_p <- (r$reads_unmapped/(r$reads_total))*100
r$reads_surviving_MQ_p <- (r$surviving_MQ/(r$reads_total))*100
View(r)
mean(r$reads_total)
mean(r$surviving_MQ)
mean(r$multimapping_p)
mean(r$unmapped_p)
mean(r$error_rate)
mean(r$duplication_per)
mean(r$uniquely_mapped_p)
mean(r$uniq_mapping_rate)
mean(r$reads_surviving_MQ_p)
t <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2.txt", header = T)
t$mapping_rate <- (t$reads_mapped/(t$reads_total))*100
t$uniq_mapping_rate <- (t$uniquely_mapped/(t$reads_total))*100
t$multimapping_reads <- (t$reads_mapped - t$uniquely_mapped)
t$multimapping_p <- (t$multimapping_reads/(t$reads_total))*100
t$unmapped_p <- (t$reads_unmapped/(t$reads_total))*100
t$reads_surviving_MQ_p <- (t$surviving_MQ/(t$reads_total))*100
mean(t$surviving_MQ)
mean(t$reads_surviving_MQ_p)
View(t)
View(r)
mean(t$surviving_MQ)
mean(t$uniq_mapping_rate)
mean(t$multimapping_p)
mean(t$unmapped_p)
mean(t$error_rate)
mean(t$duplication_per)
r <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2_26scaffolds.txt", header = T)
species <- substr(r$ind, 3, 5)
r$species <- species
r$mapping_rate <- (r$reads_mapped/(r$reads_total))*100
r$uniq_mapping_rate <- (r$uniquely_mapped/(r$reads_total))*100
r$multimapping_reads <- (r$reads_mapped - r$uniquely_mapped)
r$multimapping_p <- (r$multimapping_reads/(r$reads_total))*100
r$unmapped_p <- (r$reads_unmapped/(r$reads_total))*100
r$reads_surviving_MQ_p <- (r$surviving_MQ/(r$reads_total))*100
# Make boxplots of mapping rates
# Make color palette
library(RColorBrewer)
nb.cols <- 22
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)
r$species <- species
View(r)
species <- substr(r$ind, 3, 5)
r$species <- species
View(r)
species
r$species
# Same for survival rate (high quality, uniquely mapping reads)
survival_counts <- cbind(r[,c(1,12,10)])
View(survival_counts)
colnames(survival_rates) <- c("sample", "species", "Survival_reads")
colnames(survival_counts) <- c("sample", "species", "Survival_reads")
ggplot(survival_counts, aes(x = species, y = Survival_rate, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Percentage of reads with MQ > 20 to T.lei assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
# Make boxplots of uniquely mapping rates
library(ggplot2)
ggplot(survival_counts, aes(x = species, y = Survival_rate, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Percentage of reads with MQ > 20 to T.lei assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
ggplot(survival_counts, aes(x = species, y = Survival_reads, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Percentage of reads with MQ > 20 to T.lei assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
ggplot(survival_counts, aes(x = species, y = Survival_reads, color = species)) +
geom_boxplot() +
geom_jitter(shape=16, position=position_jitter(0.2)) +
ylab(label = "Number of reads with MQ > 20 to T.lei26 assembly") +
xlab(label = "Species") +
theme(legend.position="none") +
scale_fill_manual(values = mycolors) +
scale_color_manual(values = mycolors)
r <- read.table("bio-info_phd/alignment_report_Tlei_Bowtie2_26scaffolds.txt", header = T)
View(r)
species <- substr(r$ind, 3, 5)
r$species <- species
r$mapping_rate <- (r$reads_mapped/(r$reads_total))*100
r$uniq_mapping_rate <- (r$uniquely_mapped/(r$reads_total))*100
r$multimapping_reads <- (r$reads_mapped - r$uniquely_mapped)
r$multimapping_p <- (r$multimapping_reads/(r$reads_total))*100
r$unmapped_p <- (r$reads_unmapped/(r$reads_total))*100
r$reads_surviving_MQ_p <- (r$surviving_MQ/(r$reads_total))*100
r$reads_surviving_not_DP <- r$surviving_MQ*(1-r$duplication_per)
mmean(r$reads_surviving_not_DP)
mean(r$reads_surviving_not_DP)
library(ggplot2)
## To remove individuals with low data quality / amount
boxplot(r$reads_surviving_not_DP)
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_point(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
xlab(label = "") + theme(legend.position="none")
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_point(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
geom_line(y = 500000)
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_point(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
geom_hline(yintercept=500000) +
xlab(label = "") + theme(legend.position="none")
ggplot(r, aes(x = "", y = reads_surviving_not_DP,)) +
geom_boxplot()  +
geom_jitter(shape=16, colour = "Black") +
ylab(label = "Number of non-duplicate, surviving reads") +
geom_hline(yintercept=500000) +
xlab(label = "") + theme(legend.position="none")
setwd('/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/')
map_data <- read.delim("mapping_stats.full.txt", sep = " ", header = T)
View(map_data)
mean(map_data$total)
boxplot(map_data$total)
median(map_data$total) # 68,856,922 reads per sample on average
min(map_data$total)
quantile(map_data$total, c(25,75))
quantile(map_data$total, c(0.25,0.75))
quantile(map_data$total, c(0.10,0.90))
quantile(map_data$total, c(0.05,0.95)) # 80 % of samples have between 56 - 78 million reads
mean(map_data$uniq)
map_data <- read.delim("mapping_stats.full.txt", sep = " ", header = T)
mean(map_data$uniq)
maptest$sample_species <- c(rep(c("Tfas"), times = 36), rep(c("Tlei"), times = 36))
map_data$sample_species <- c(rep(c("Tfas"), times = 36), rep(c("Tlei"), times = 36))
View(map_data)
mean(map_data[map_data$sample_species == "Tlei", 3]) # 84.8 %
mean(map_data[map_data$sample_species == "Tfas", 3]) # 85.19 %
min(map_data$uniq)
map_data$sample_number <- c(rep(c("A"), times = 6), rep(c("B"), times = 6),
rep(c("C"), times = 6), rep(c("D"), times = 6),
rep(c("E"), times = 6), rep(c("F"), times = 6),
rep(c("A"), times = 6), rep(c("C"), times = 6),
rep(c("D"), times = 6), rep(c("E"), times = 6),
rep(c("F"), times = 6), rep(c("G"), times = 6))
library(ggplot2)
maptest <- read.delim('mapping_stats.txt', header = T, sep = " ")
maptest$ref_genome <- rep(c("A.comosus", "T.fasciculata", "T.leiboldiana"), times = 24)
maptest$sample_species <- c(rep(c("Tfas"), times = 36), rep(c("Tlei"), times = 36))
ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100))
ggplot(data = maptest[maptest$ref_genome == "T.leiboldiana",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100))
ggplot(data = maptest[maptest$ref_genome == "A.comosus",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100))
ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples")
ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(),legend. title = element_blank())
ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(),legend.title = element_blank())
ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p1 <- ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p2 <- ggplot(data = maptest[maptest$ref_genome == "T.leiboldiana",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p3 <- ggplot(data = maptest[maptest$ref_genome == "A.comosus",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
grid.arrange(p1, p2, p3, nrow = 1)
library(grid)
grid.arrange(p1, p2, p3, nrow = 1)
library(gridExtra)
grid.arrange(p1, p2, p3, nrow = 1)
p3 <- ggplot(data = maptest[maptest$ref_genome == "A.comosus",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),legend.position = "none")
grid.arrange(p1, p2, p3, nrow = 1)
p1 <- ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("% reads mapping uniquely") + xlab("") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p2 <- ggplot(data = maptest[maptest$ref_genome == "T.leiboldiana",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p3 <- ggplot(data = maptest[maptest$ref_genome == "A.comosus",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("") + xlab("") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),legend.position = "none")
grid.arrange(p1, p2, p3, nrow = 1)
p1 <- ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + xlab("") +
scale_y_continuous(name="% reads mapping uniquely", breaks = c(seq(from = 10, to = 100, by = 10))) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p2 <- ggplot(data = maptest[maptest$ref_genome == "T.leiboldiana",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("") + xlab("Samples") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "none")
p3 <- ggplot(data = maptest[maptest$ref_genome == "A.comosus",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + ylim(c(0,100)) + ylab("") + xlab("") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),legend.position = "none")
grid.arrange(p1, p2, p3, nrow = 1)
p2 <- ggplot(data = maptest[maptest$ref_genome == "T.leiboldiana",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") +
xlab("Samples") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 100, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
grid.arrange(p1, p2, p3, nrow = 1)
p3 <- ggplot(data = maptest[maptest$ref_genome == "A.comosus",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") + xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 100, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),legend.position = "none")
grid.arrange(p1, p2, p3, nrow = 1)
View(maptest)
View(maptest)
p1 <- ggplot(data = maptest[maptest$ref_genome == "T.fasciculata",], aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
grid.arrange(p1, p2, p3, nrow = 1)
# In A.comosus
mean(maptest[maptest$ref_genome == "A.comosus" & maptest$sample_species == "Tlei", 3]) # 92.9 %
mean(maptest[maptest$ref_genome == "A.comosus" & maptest$sample_species == "Tfas", 3]) # 87.3 %
p4 <- ggplot(data = mapdata, aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p4 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_species)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p4
p4 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_species, sample_number)) +
p4 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_species, sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p4
ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_species, sample_number))) +
geom_bar(stat="identity")
p4 <- ggplot(data = map_data[map_data$sample_species == "Tfas",], aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p4 <- ggplot(data = map_data[map_data$sample_species == "Tfas",], aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p4
p5 <- ggplot(data = map_data[map_data$sample_species == "Tlei",], aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
grid.arrange(p4, p5, nrow = 1)
p4 <- ggplot(data = map_data[map_data$sample_species == "Tfas",], aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p5 <- ggplot(data = map_data[map_data$sample_species == "Tlei",], aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
grid.arrange(p4, p5, nrow = 1)
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none")
p6
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(0,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
p6
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(70,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
p6
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 110, by = 10)),
limits = c(60,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
p6
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") + ylim(c(60,100))
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") + ylim(c(60,100)) +
scale_y_continuous(name="",
breaks = c(seq(from = 10, to = 110, by = 10)),
) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
p6
p6 <- ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 60, to = 110, by = 10)),
limits = c(60,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
p6
ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 60, to = 110, by = 10)),
limits = c(60,110)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
ggplot(data = map_data, aes(x=Name, y=uniq, fill=c(sample_number))) +
geom_bar(stat="identity") +
xlab("")
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("")
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 60, to = 110, by = 10)),
limits = c(60,110))
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 10)),
limits = c(0,110))
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 10))) +
coord_cartesian(ylim=c(60,100))
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 10))) +
coord_cartesian(ylim=c(60,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 10))) +
coord_cartesian(ylim=c(65,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 5))) +
coord_cartesian(ylim=c(65,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4)
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 5))) +
coord_cartesian(ylim=c(65,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4, linetype = "dashed")
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 5))) +
coord_cartesian(ylim=c(65,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4, linetype = "dashed", size = .5)
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("") +
scale_y_continuous(name="",
breaks = c(seq(from = 0, to = 110, by = 5))) +
coord_cartesian(ylim=c(65,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4, linetype = "dashed", size = .2)
ggplot(data = map_data, aes(x=Name, y=uniq, fill=sample_number)) +
geom_bar(stat="identity") +
xlab("Samples") +
scale_y_continuous(name="% reads mapping uniquely",
breaks = c(seq(from = 0, to = 110, by = 5))) +
coord_cartesian(ylim=c(65,100)) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.position = "none") +
geom_hline(yintercept=85.4, linetype = "dashed", size = .2)
