shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
wilcox.test(count ~ species, data=x)
}
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
print(wilcox.test(count ~ species, data=x))
}
cluster_stats <- data.frame()
wilcox <- wilcox.test(count ~ species, data=x)
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- mean(x[x$species == "Tfas",]$count)
mean_Tlei <- mean(x[x$species == "Tlei",]$count)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, wilcox$p.value)
cluster_stats <- rbind(cluster_stats, line)
}
View(cluster_stats)
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- mean(x[x$species == "Tfas",]$count)
mean_Tlei <- mean(x[x$species == "Tlei",]$count)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, wilcox$p.value)
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- mean(x[x$species == "Tlei",]$count)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, wilcox$p.value)
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- round(wilcox.test(count ~ species, data=x), 2)
line <- c(t, mean_Tfas, mean_Tlei, wilcox$p.value)
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value),3)
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value),5)
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 5))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 10))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 20))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 15))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster4.txt", "\\-|\\_|\\.")[[1]][11]
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt")
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"))
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster1.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster1.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
View(shapiro_0100)
View(shapiro_0500)
View(shapiro_0900)
View(shapiro_1300)
View(shapiro_1700)
View(shapiro_2100)
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 15))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
View(wilcox)
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 20))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster2.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster2.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
View(shapiro_0100)
View(shapiro_0500)
View(shapiro_0900)
View(shapiro_1300)
View(shapiro_1700)
View(shapiro_2100)
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster3.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster3.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster5.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster5.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster6.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster6.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster7.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster7.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 30))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
setwd("/Users/clara/Documents/GitHub/Tillandsia-compgenomics/7. Rna-seq experiment 6 timepoints/Co-expression_networks_MaSigPro/")
counts <- read.table("counts.Tfas_Tlei_6_timepoints.normalized-cpm.EdgeR.logtransformed.txt", header = T, row.names = 1)
genes <- scan("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster5.txt", character(), quote = "")
module <- str_split("Genes_Significant_Tfas-vs-Tlei_0.7-trimmed_TLEI-REF-cluster5.txt", "\\-|\\_|\\.")[[1]][11]
module_counts <- subset(counts, rownames(counts) %in% genes)
module_counts_Tfas <- module_counts[, c(1:36)]
module_counts_Tlei <- module_counts[, c(37:72)]
mod_size <- as.character(nrow(module_counts))
mean_count_Tfas <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tfas[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tfas) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tlei <- as.data.frame(sapply(seq(1, 6, 1), function(j) rowMeans(module_counts_Tlei[, c(j,j+6,j+12,j+18,j+24,j+30)])))
colnames(mean_count_Tlei) <- c("0100", "0500", "0900","1300", "1700", "2100")
mean_count_Tfas$gene_id <- row.names(mean_count_Tfas)
mean_count_Tlei$gene_id <- row.names(mean_count_Tlei)
mean_count_Tfas_m <- melt(mean_count_Tfas, id.vars = "gene_id")
colnames(mean_count_Tfas_m) <- c("gene_id", "time", "count")
mean_count_Tlei_m <- melt(mean_count_Tlei, id.vars = "gene_id")
colnames(mean_count_Tlei_m) <- c("gene_id", "time", "count")
# Calculate average differences per group
mean_count_Tfas_m$species <- "Tfas"
mean_count_Tlei_m$species <- "Tlei"
test <- rbind(mean_count_Tfas_m, mean_count_Tlei_m)
# This shows that none of the counts are normally distributed - we will have to perform a
# Mann-Whitney U test
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
s <- x %>%
group_by(species) %>%
shapiro_test(count)
ggqqplot(x, x = "count", facet.by = "species")
name <- paste0("shapiro_",t)
assign(name, s)
}
cluster_stats <- data.frame()
for (i in c(1:6)){
t = as.vector(unique(test$time))[i]
x <- test[test$time == t,]
mean_Tfas <- round(mean(x[x$species == "Tfas",]$count), 2)
mean_Tlei <- round(mean(x[x$species == "Tlei",]$count), 2)
wilcox <- wilcox.test(count ~ species, data=x)
line <- c(t, mean_Tfas, mean_Tlei, round(wilcox$p.value, 5))
cluster_stats <- rbind(cluster_stats, line)
colnames(cluster_stats) <- c("Time", "Mean_log(CPM)_Tfas", "Mean_log(CPM)_Tlei", "p-value")
}
write.table(cluster_stats, file = paste0("Mean_Expression_per_Timepoint_", module, ".txt"),
quote = F, sep = "\t")
View(shapiro_2100)
View(shapiro_1700)
View(shapiro_1300)
source('~/.active-rstudio-document')
