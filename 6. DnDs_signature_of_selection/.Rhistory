setwd("/home/clara/Documents/GitHub/Tillandsia-compgenomics/DnDs_signature_of_selection/")
library(ggplot2)
# Merge different alignment and filter runs into one large dataframe
kaks_strinfil <- read.delim("KaKs_stringent_filtering.txt", sep = '\t', header=T)
kaks_reldif <- read.delim("KaKs_relaxed_reldif.txt", sep = '\t', header=T)
kaks_comp <- read.delim("KaKs_relaxed_comp.txt", sep = '\t', header=T)
kaks_reldif_comp <- read.delim("KaKs_relaxed_reldif_comp.txt", sep = '\t', header=T)
kaks_ext_strinfil <- read.delim("KaKs_extensive_stringent_filtering.txt", sep = '\t', header=T)
kaks_ext_reldif <- read.delim("KaKs_extensive_relaxed_reldiff.txt", sep = '\t', header=T)
kaks_ext_comp <- read.delim("KaKs_extensive_relaxed_comp.txt", sep = '\t', header=T)
kaks_ext_reldif_comp <- read.delim("KaKs_extensive_relaxed_reldiff_comp.txt", sep = '\t', header=T)
kaks_test <- rbind(kaks_strinfil, kaks_reldif, kaks_comp, kaks_reldif_comp, kaks_ext_strinfil,
kaks_ext_reldif, kaks_ext_comp, kaks_ext_reldif_comp)
filter <- c(rep("stringent_filtering", 200), rep("relaxed_length_diff", 200),
rep("relaxed_completeness", 199), rep("relaxed_length_completeness", 200),
rep("stringent_filtering", 200), rep("relaxed_length_diff", 200),
rep("relaxed_completeness", 200), rep("relaxed_length_completeness", 200))
alignment <- c(rep("basic", 799), rep("extensive", 800))
kaks_test <- cbind(kaks_test, filter, alignment)
ggplot(kaks_test, aes(x=filter, y=Ka.Ks, fill=alignment)) +
geom_boxplot() +
ylim(c(0,5))
ggplot(kaks_test, aes(x=filter, y=Ka.Ks)) +
geom_boxplot() +
ylim(c(0,5)) +
geom_jitter(shape=16, position=position_jitter(0.2))
tapply(kaks_test$Ka.Ks, kaks_test$filter, mean)
View(kaks_test)
is.na(kaks_test$Ka)
is.na(kaks_test$Ka) == T
sum(is.na(kaks_test$Ka))
sum(is.na(kaks_test$Ks))
sum(is.na(kaks_test$Ka.Ks))
tapply(!is.na(kaks_test$Ka.Ks), kaks_test$filter, mean)
tapply(!is.na(kaks_test$Ka.Ks), kaks_test$filter, median)
tapply(!is.na(kaks_test$Ka.Ks), kaks_test$filter, IQRS)
tapply(!is.na(kaks_test$Ka.Ks), kaks_test$filter, IQR)
tapply(!is.na(kaks_test$P.Value.Fisher.), kaks_test$filter)
tapply(!is.na(kaks_test$P.Value.Fisher.), kaks_test$filter, mean)
nrows(kaks_test[kaks_test$P.Value.Fisher. < 0.05 && kaks_test$filter == "stringent_filtering",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 && kaks_test$filter == "stringent_filtering",])
summary(kaks_test)
kaks_test$P.Value.Fisher. < 0.05
kaks_test$filter == "stringent_filtering"
kaks_test$P.Value.Fisher. < 0.05 && kaks_test$filter == "stringent_filtering"
kaks_test[kaks_test$P.Value.Fisher. < 0.05 && kaks_test$filter == "stringent_filtering",]
View(kaks_strinfil)
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 && kaks_test$filter == "relaxed_completeness",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "stringent_filtering",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "stringent_filtering" & kaks_test$alignment == "extensive",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "stringent_filtering" & kaks_test$alignment == "basic",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_completeness",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_length_diff",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_length_diff_comp",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_length_completeness",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "stringent_filtering",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_completeness",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_length_diff",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_length_completeness",])
nrow(kaks_test[kaks_test$P.Value.Fisher. < 0.05 & kaks_test$filter == "relaxed_completeness" & kaks_test$alignment == "extensive",]) # 219
sum(is.na(kaks_test$Ka))
(is.na(kaks_test$Ka))
kaks_test[is.na(kaks_test$Ka),]
table(kaks_test[is.na(kaks_test$Ka),])
table(kaks_test[is.na(kaks_test$Ka),]$filtering)
kaks_test[is.na(kaks_test$Ka),]$filtering
table(kaks_test[is.na(kaks_test$Ka),-2])
table(kaks_test$filtering)
table(kaks_test$filter)
kaks_test[is.na(kaks_test$Ka),25]
table(kaks_test[is.na(kaks_test$Ka),25])
table(kaks_test[is.na(kaks_test$Ks),25])
table(kaks_test[is.na(kaks_test$Ka.Ks),25])
checklist >- read.delim("checklist_with_diff_completeness.txt", header = T)
checklist <- read.delim("checklist_with_diff_completeness.txt", header = T)
View(checklist)
table(checklist$completeness)
hist(checklist$diff_per_Tfas)
ggplot(checklist, aes(x=diff_per_Tfas)) + geom_histogram()
ggplot(checklist, aes(x=diff_per_Tfas)) + geom_histogram(binwidth = 1)
ggplot(checklist, aes(x=diff_per_Tfas)) + geom_histogram(binwidth = 10)
ggplot(checklist, aes(x=diff_per_Tfas)) + geom_histogram(binwidth = 0.1)
ggplot(checklist, aes(x=diff_per_Tfas)) + geom_histogram(binwidth = 0.1) +
xlim(c(-1,1))
library(data.table)
?which()
# set up cut-off values
breaks <- seq(from = -1, to = 1, by = 0.1)
# specify interval/bin labels
i=1
paste(breaks[i],'-', breaks[i+1])
breaks[i],'-', breaks[i+1], sep ='')
paste(breaks[i],'-', breaks[i+1], sep ='')
paste('[',breaks[i],']-[', breaks[i+1], ']', sep ='')
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
tags <- c()
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
length(breaks)
i=1
tags <- c()
for (i in length(breaks)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
i = i+1
}
# specify interval/bin labels
i=1
tags <- c()
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
i = i+1
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
length(breaks)-1
# specify interval/bin labels
i=1
tags <- c()
for (i in (length(breaks)-1){
# specify interval/bin labels
i=1
tags <- c()
for (i in (length(breaks)-1)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
i = i+1
}
# specify interval/bin labels
i=1
tags <- c()
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
i = i+1
# specify interval/bin labels
n=1
tags <- c()
for (i in (length(breaks)-1)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
}
# specify interval/bin labels
n=1
tags <- c()
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n=1
tags <- c()
for (i in 1:(length(breaks)-1)){
for (i in 1:(length(breaks)-1)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
}
1:(length(breaks)-1)
# specify interval/bin labels
n=1
tags <- c()
for (i in 1:(length(breaks)-1)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
}
# specify interval/bin labels
n=1
tags <- c()
for (i in 1:length(breaks)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
}
# bucketing values into bins
group_tags <- cut(checklist$diff_per_Tfas,
breaks=breaks,
include.lowest=TRUE,
right=FALSE,
labels=tags)
length(tags)
length(breaks)
?cut()
tags
for (i in 1:(length(breaks-1)){
# specify interval/bin labels
n=1
tags <- c()
for (i in 1:(length(breaks-1))){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
}
tags
# specify interval/bin labels
n=1
tags <- c()
for (i in 1:(length(breaks)-1)){
tags <- c(tags, paste('[',breaks[i],']-[', breaks[i+1], ']', sep =''))
n = n+1
}
# bucketing values into bins
group_tags <- cut(checklist$diff_per_Tfas,
breaks=breaks,
include.lowest=TRUE,
right=FALSE,
labels=tags)
# inspect bins
summary(group_tags)
?quantile()
quantile(checklist$diff_per_Tfas, probs=c(.05,.25,.5,.75,.95))
quantile(checklist$diff_per_Tfas, probs=c(.05,.25,.5,.75,.85,.95))
quantile(checklist$diff_per_Tfas, probs=c(.05,.15,.25,.5,.75,.85,.95))
nrow(checklist[checklist$diff_per_Tfas > -0.2 & checklist$diff_per_Tfas < 0.2 & checklist$diff_per_Tlei > -0.2 & checklist$diff_per_Tlei < 0.2,])
table(checklist[checklist$diff_per_Tfas > -0.2 & checklist$diff_per_Tfas < 0.2 & checklist$diff_per_Tlei > -0.2 & checklist$diff_per_Tlei < 0.2,7])
nrow(checklist[checklist$diff_per_Tfas > -0.2 & checklist$diff_per_Tfas < 0.2 & checklist$diff_per_Tlei > -0.2 & checklist$diff_per_Tlei < 0.2,7])
nrow(checklist[checklist$diff_per_Tfas > -0.2 & checklist$diff_per_Tfas < 0.2 & checklist$diff_per_Tlei > -0.2 & checklist$diff_per_Tlei < 0.2,])
# 10,577
nrow(checklist[checklist$diff_per_Tfas > -0.2 & checklist$diff_per_Tfas < 0.2 & checklist$diff_per_Tlei > -0.2 & checklist$diff_per_Tlei < 0.2 & checklist$difference < 200,])
tapply(!is.na(kaks_test$Ka.Ks), kaks_test$filter, mean)
ggplot(kaks_test, aes(x=filter, y=!is.na(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5)) +
geom_jitter(shape=16, position=position_jitter(0.2))
!is.na(Ka.Ks)
ggplot(kaks_test, aes(x=filter, y=!is.na(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5)) +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(kaks_test, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5)) +
geom_jitter(shape=16, position=position_jitter(0.2))
ggplot(kaks_test, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5))
tapply(!is.na(kaks_test$Ka.Ks), kaks_test$filter, median)
ggplot(kaks_test, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
coord_cartesian(y = c(0,15))
ggplot(kaks_test, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
coord_cartesian(y = c(0,5))
median(kaks_test[kaks_test$filter == "stringent_filtering",7])
median(!is.na(kaks_test[kaks_test$filter == "stringent_filtering",7]))
kaks_no_na <- kaks_test[!is.na(kaks_test$Ka.Ks),]
?na.omit
?na.omit()
View(kaks_no_na)
sum(is.na(kaks_no_na$Ka.Ks))
ggplot(kaks_no_na, aes(x=filter, y=Ka.Ks, fill=alignment)) +
geom_boxplot() +
ylim(c(0,5))
ggplot(kaks_no_na, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
coord_cartesian(y = c(0,5))
ggplot(kaks_test, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot()
ggplot(kaks_test, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5))
boxplot(kaks_test[kaks_test$filter == "stringent_filtering",7])
class(kaks_test$Ka.Ks)
median(kaks_test[kaks_test$filter == "stringent_filtering",7])
boxplot(kaks_test[kaks_test$filter == "stringent_filtering",!is.na(7)])
median(kaks_test[kaks_test$filter == "stringent_filtering",!is.na(7)])
median(!is.na(kaks_test[kaks_test$filter == "stringent_filtering",7]))
!is.na(kaks_test[kaks_test$filter == "stringent_filtering",7])
library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
kaks_test_nas %>% drop_na(Ka.Ks)
kaks_test %>% drop_na(Ka.Ks)
kaks_test_na <- kaks_test %>% drop_na(Ka.Ks)
kaks_test %>% drop_na(Ka.Ks)
kaks_test_na <- length(kaks_test %>% drop_na(Ka.Ks))
length(kaks_test %>% drop_na(Ka.Ks))
kaks_test_na <- kaks_test %>% drop_na(Ka.Ks)
View(kaks_test_na)
kaks_test[is.na(kaks_test$Ka.Ks),]
nrow(kaks_test[is.na(kaks_test$Ka.Ks),])
nrow(!kaks_test[is.na(kaks_test$Ka.Ks),])
nrow(kaks_test[!is.na(kaks_test$Ka.Ks),])
ggplot(kaks_test_na, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5))
View(kaks_test_na)
quantiles(kaks_no_na$Ka.Ks, probs = c(.25,.5,.75))
quantile(kaks_no_na$Ka.Ks, probs = c(.25,.5,.75))
median(kaks_no_na$Ka.Ks)
tapply(kaks_no_na, kaks_no_na$filter, median)
tapply(kaks_no_na$Ka.Ks, kaks_no_na$filter, median)
ggplot(kaks_test_na, aes(x=filter, y=(Ka.Ks))) +
geom_boxplot() +
ylim(c(0,5)) +
geom_jitter(shape=16, position=position_jitter(0.2))
